knitr::spin("midphase.R", knit = T)
knitr::spin("midphase.R", knit = F)
rmarkdown::render("midphase.Rmd", output_format = "html_documant")
rmarkdown::render("midphase.Rmd", output_format = "html_document")
knitr::spin("midphase.R", knit = F)
rmarkdown::render("midphase.Rmd", output_format = "html_document")
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
warnings()
warnings()
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
warnings()
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
library(tidyverse)
library(tidylog)
library(here)
library(readxl)
library(glue)
library(tidytext)
library(janitor)
library(fgsea)
library(dorothea)
library(progeny)
library(biobroom)
library(circlize)
library(AachenColorPalette)
library(lemon)
library(VennDiagram)
library(ComplexHeatmap)
library(gridExtra)
library(cowplot)
library(ggpubr)
library(UpSetR)
library(ggwordcloud)
library(patchwork)
library(enrichR)
library(openxlsx)
library(scales)
library(annotables)
library(msigdf) # remotes::install_github("ToledoEM/msigdf@v7.1")
library(gtools)
options("tidylog.display" = list(print))
source("scripts/utils-utils.R")
source("scripts/utils-plots.R")
source("scripts/custom_functions.R")
#' # Meta-analysis
#'## Merging mouse liver regeneration data from different time points of the mid-phase
#+
mouse_degs =
read.table("data/exp_X36H-C0H.txt", header = T) %>% mutate(contrast = "x36h-c0")  %>%
rbind(read.table("data/exp_X44H-C0H.txt", header = T) %>% mutate(contrast = "x44h-c0") )  %>%
rbind(read.table("data/exp_X48H-C0H.txt", header = T) %>% mutate(contrast = "x48h-c0") ) %>%
setNames(c("gene","logFC","pval","fdr","contrast")) %>% .[,c(1,5,2,3,4)] %>% as_tibble() %>%
group_by(contrast,gene) %>% filter(fdr == min(fdr)) %>% assign_deg()
mapped_degs = mouse_degs %>% translate_gene_ids(from = "symbol_mgi", to = "symbol_hgnc") %>%
drop_na() %>% group_by(contrast, gene) %>%
slice_max(order_by = abs(logFC), n = 1, with_ties = F) %>%
ungroup()
signature_df <- mapped_degs %>%
untdy("gene", "contrast", "logFC")   #untdy sets gene as the row and puts contrast as column, logFC as entry in [gene, contrast]
transplantation = readRDS("data/transplantation_limma_result.rds") %>%
dplyr:: select(gene, contrast,logFC, pval, fdr, regulation) %>%
mutate(phenotype = "transplantation") %>%
filter(gene %in% (grch38 %>% filter(biotype == "protein_coding") %>% pull(symbol) %>%
unique) )
#'Reading the DEG analysis file of HCC data
#+
hcc = readRDS("data/hcc_limma_results.rds") %>% as_tibble() %>%
dplyr:: select(gene, contrast,logFC, pval, fdr, regulation)  %>%
mutate(phenotype = "hcc") %>%
filter(gene %in% (grch38 %>% filter(biotype == "protein_coding") %>% pull(symbol) %>%
unique) )
#' ## Merging HCC and transplantation data
#+
contrasts = bind_rows(transplantation, hcc)
#' Summarising the no. of up and down-regulated genes in HCC and transplantation data
aa=contrasts %>%
mutate(direction = case_when(
sign(logFC) >= 0 ~ "up",
sign(logFC) < 0 ~ "down"
)) %>% distinct(phenotype, contrast, direction, gene) %>%
count(phenotype, contrast, direction)
#' Extracting top 500 up and down regulated genes from HCC and transplantation data
genesets_top <- contrasts %>%
mutate(direction = case_when(
sign(logFC) >= 0 ~ "up",
sign(logFC) < 0 ~ "down"
)) %>%
group_by(phenotype, contrast, direction) %>%
top_n(500, abs(logFC)) %>%
ungroup() %>%
unite(geneset, phenotype, contrast, sep = "-") %>%
unite(geneset, geneset, direction, sep = "|") %>%
mutate(geneset = as_factor(geneset)) %>%
select(geneset, gene)
cc = genesets_top %>% distinct(geneset, gene) %>%
count(geneset,name = "top_500_genes")
dd =
genesets_top %>% distinct(gene, geneset) %>% count(gene) %>%
arrange(desc(n)) %>% distinct(n, gene) %>% count(n) %>%
setNames(c("No. of sets found", "No. of Genes"))
#' ## Running GSEA using fgsea package
#' Inputs are ranked list of genes `signature_df` and `genesets_top`.
#' Given a ranked list of genes and a geneset, fgsea aims to determine if members of geneset are overrepresented in the
#' top or bottom of ranked gene list
#+
set.seed(123)
gsea_res_top <- run_gsea(signature_df, genesets_top, tidy = T) %>%
separate(geneset, into = c("geneset", "direction"), sep = "[|]") %>%
separate(geneset,
into = c("phenotype", "contrast"), sep = "-",
remove = F
) %>%
mutate(
signature = as_factor(signature),
geneset = as_factor(geneset),
time = parse_number(as.character(signature))
)
gg = gsea_res_top %>% mutate(ss = gsea_res_top$geneset %>%
paste0("|",gsea_res_top$direction)) %>%
mutate(No_genes_in_mouse  = nrow(signature_df)) %>%
mutate(No_of_genes_in_human = 500) %>%
mutate(leading_edges = gsea_res_top %>%
apply(1, function(x) x$leadingEdge %>% unlist %>% length) ) %>%
select(No_genes_in_mouse,No_of_genes_in_human,signature, ss,
size, direction, ES, NES, pval, padj,leading_edges) %>%
setNames(c("No_of_genes_in_mouse","No_of_genes_in_human",
"Mouse_contrasrt","Human_contrast","Intersection","Direction",
"fgsea_score_ES","fgsea_score_NS","fgsea_pval","fgsea_padj",
"leading_edges")) %>%
filter(fgsea_padj <= 0.05 & (Direction == "up" & fgsea_score_ES >= 0) |
(Direction == "down" & fgsea_score_ES < 0))
gg
signature_df
signature_df %%> dim
signature_df %>% dim
gg
# summary gsea plot
#dev.new(width = 3, height = 2, units = "in", noRStudioGD = T)
w=3
dpi=300
conversion=1/524*(dpi*w)/dpi*96
gsea_res_top %>%
mutate(direction = ifelse(direction %>% grepl("down",.), "Down","Up"  ) %>%
factor(levels = c("Up", "Down")) ) %>%
mutate(geneset = ifelse(grepl("trans",geneset),"LT","HCC")  %>%
factor(levels = c("LT","HCC") )  ) %>%
mutate(signature =  rep(c("36h","44h","48h"),each = 4) %>%
factor(levels = c("36h","44h","48h") )) %>%
mutate(label = stars.pval(padj)) %>%
rowwise() %>%
mutate(leading_edge_size = ifelse(padj < 0.05,
leadingEdge %>% length %>% as.character ,"") ) %>%
mutate(label2 = factor(leading_edge_size, levels = leading_edge_size   )    )   %>%
ggplot(aes(x = signature, y = geneset, fill = ES)) +
geom_tile() +
geom_text(aes(label = label), size = fz / (14 / 5), vjust = 0) +
geom_text(aes(label = label2), size = 7/ (14 / 5), vjust = 1) +
facet_wrap(~direction,ncol = 2) +
theme(axis.title = element_text(size = 22*conversion),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust= -1),
axis.text.y = element_text(angle = 90, vjust = 0, hjust=0.6),
axis.line = element_blank(),axis.ticks = element_blank(),
#legend.position = c(1,0.55),legend.direction = "vertical",
panel.spacing = unit(0.2,"lines"),
plot.background = element_rect(color = "black")
) +
scale_fill_gradient2(
low = aachen_color("blue"), mid = "white",
high = aachen_color("red")
) +
my_theme(grid = "no", fsize = fz) +
labs(x = "Mouse", y = "Human", fill = "ES") +
guides(fill = guide_colorbar(title = "ES", ticks.linewidth = 0.3,
barwidth = 0.5, barheight = 3.8,frame.colour = "black",
frame.linewidth = 0.3,ticks.colour = "black", label.vjust =0.3))
#Graphical parameters
#+
fz <- 9
# color function for heatmaps
col_fun <- colorRamp2(
c(-4, 0, 4),
c(aachen_color("blue"), "white", aachen_color("red"))
)
gsea_res_top %>%
mutate(direction = ifelse(direction %>% grepl("down",.), "Down","Up"  ) %>%
factor(levels = c("Up", "Down")) ) %>%
mutate(geneset = ifelse(grepl("trans",geneset),"LT","HCC")  %>%
factor(levels = c("LT","HCC") )  ) %>%
mutate(signature =  rep(c("36h","44h","48h"),each = 4) %>%
factor(levels = c("36h","44h","48h") )) %>%
mutate(label = stars.pval(padj)) %>%
rowwise() %>%
mutate(leading_edge_size = ifelse(padj < 0.05,
leadingEdge %>% length %>% as.character ,"") ) %>%
mutate(label2 = factor(leading_edge_size, levels = leading_edge_size   )    )   %>%
ggplot(aes(x = signature, y = geneset, fill = ES)) +
geom_tile() +
geom_text(aes(label = label), size = fz / (14 / 5), vjust = 0) +
geom_text(aes(label = label2), size = 7/ (14 / 5), vjust = 1) +
facet_wrap(~direction,ncol = 2) +
theme(axis.title = element_text(size = 22*conversion),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust= -1),
axis.text.y = element_text(angle = 90, vjust = 0, hjust=0.6),
axis.line = element_blank(),axis.ticks = element_blank(),
#legend.position = c(1,0.55),legend.direction = "vertical",
panel.spacing = unit(0.2,"lines"),
plot.background = element_rect(color = "black")
) +
scale_fill_gradient2(
low = aachen_color("blue"), mid = "white",
high = aachen_color("red")
) +
my_theme(grid = "no", fsize = fz) +
labs(x = "Mouse", y = "Human", fill = "ES") +
guides(fill = guide_colorbar(title = "ES", ticks.linewidth = 0.3,
barwidth = 0.5, barheight = 3.8,frame.colour = "black",
frame.linewidth = 0.3,ticks.colour = "black", label.vjust =0.3))
gg
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
png
?png
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
w=3
dpi=300
conversion=1/524*(dpi*w)/dpi*96
png(filename = "results/gsea_heatmap.png", width = 3, height = 2, units = "in",
res = 300)
gsea_res_top %>%
mutate(direction = ifelse(direction %>% grepl("down",.), "Down","Up"  ) %>%
factor(levels = c("Up", "Down")) ) %>%
mutate(geneset = ifelse(grepl("trans",geneset),"LT","HCC")  %>%
factor(levels = c("LT","HCC") )  ) %>%
mutate(signature =  rep(c("36h","44h","48h"),each = 4) %>%
factor(levels = c("36h","44h","48h") )) %>%
mutate(label = stars.pval(padj)) %>%
rowwise() %>%
mutate(leading_edge_size = ifelse(padj < 0.05,
leadingEdge %>% length %>% as.character ,"") ) %>%
mutate(label2 = factor(leading_edge_size, levels = leading_edge_size   )    )   %>%
ggplot(aes(x = signature, y = geneset, fill = ES)) +
geom_tile() +
geom_text(aes(label = label), size = fz / (14 / 5), vjust = 0) +
geom_text(aes(label = label2), size = 7/ (14 / 5), vjust = 1) +
facet_wrap(~direction,ncol = 2) +
theme(axis.title = element_text(size = 22*conversion),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust= -1),
axis.text.y = element_text(angle = 90, vjust = 0, hjust=0.6),
axis.line = element_blank(),axis.ticks = element_blank(),
#legend.position = c(1,0.55),legend.direction = "vertical",
panel.spacing = unit(0.2,"lines"),
plot.background = element_rect(color = "black")
) +
scale_fill_gradient2(
low = aachen_color("blue"), mid = "white",
high = aachen_color("red")
) +
my_theme(grid = "no", fsize = fz) +
labs(x = "Mouse", y = "Human", fill = "ES") +
guides(fill = guide_colorbar(title = "ES", ticks.linewidth = 0.3,
barwidth = 0.5, barheight = 3.8,frame.colour = "black",
frame.linewidth = 0.3,ticks.colour = "black", label.vjust =0.3))
dev.off()
dev.off()
knitr::spin("midphase.R", knit = F)
gsea_res_top
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
p1=ggplot(data = enrichment_df %>% filter(time == j) %>%
mutate(gset = factor(gset, levels = unique(gset))) ,
aes(x = rank, y = running_sum, color = gset)) +
geom_path(size = 0.5, linetype = "solid",aes(color = gset) )+
geom_hline(yintercept = top_es %>% filter(time == j) %>% .$running_sum,
colour = hue_pal()(4), linetype = "dashed")+
geom_hline(yintercept = 0, colour = "black")+theme_bw()+
geom_segment(data = top_es %>% filter(time == j),
mapping = aes(x = rank, y = 0, xend = rank, yend = running_sum, color =gset),
linetype = "dashed", size = 0.5) +
ggrepel::geom_text_repel(data = top_es %>% filter(time == j) %>%
mutate(model = ifelse(grepl("trans", model), "TH", "HCC" ) %>%
factor(levels = c("TH","HCC") ) ) %>%
mutate(score = paste0("ES: ", round(running_sum,2),
padj, "(",model,"; ",direction,")" ) %>%
factor(levels = unique (.)) ) %>%
mutate(xcor =ifelse(running_sum > 0, 7000, 1)) %>%
mutate(rs = ifelse(running_sum > 0, running_sum +0.03, running_sum - 0.02)),
mapping = aes(x = xcor, y = rs , label = score,color = gset),
hjust = 0)+
ggtitle(paste0("Meta analysis of Human and Mouse DEGs(",j,")"))+
theme(plot.title = element_text(size  = 6))+
cowplot::background_grid(major = "y", minor = "none", size.major = 0.4) +
theme(
axis.line.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
# plot.margin = unit(c(1, 1, -0.25, 1), "cm"),
plot.margin = unit(c(0.2, 0.4, -0.25, 0.2), "cm"),
legend.position = "none",
panel.grid = element_blank(),
panel.background  = element_rect(color="black"),
title = element_text(size = 1),
axis.text = element_text(size = 10, color = "black"),
#axis.title = element_text(size = 13)
)
## Plotting enrichr results for pathway analysis
Reading the output of GSEA results and extracting leading edges for each comparision
Using enrichr for Biological Pathway analysis
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
library(knitr)
getwd()
spin("test_warnings.R", knit = F)
spin("test_warnings.R", knit = F)
spin("test_warnings.R", knit = F)
spin("test_warnings.R", knit = F)
spin("test_warnings.R", knit = F)
spin("midphase.R", knit = F)
geneslists = list(gsea_res %>% filter(time != 72) %>%
unnest(leadingEdge) %>% rename(gene = leadingEdge) %>%
filter(phenotype == "transplantation" & direction == "up") %>% pull(gene),
gsea_res %>% filter(time != 72) %>%
unnest(leadingEdge) %>% rename(gene = leadingEdge) %>%
filter(phenotype == "hcc" & direction == "up") %>% pull(gene),
gsea_res %>% filter(time != 72) %>%
unnest(leadingEdge) %>% rename(gene = leadingEdge) %>%
filter(phenotype == "hcc" & direction == "down") %>% pull(gene))
Using enrichr for Biological Pathway analysis
Preparing the dataframe from the output of enrichr to make final pathway plots
ggplot for pathways
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
getwd()
knitr::spin("midphase.R", knit = F)
list.files("results/")
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
knitr::spin("midphase.R", knit = F)
library(dplyr)
getwd()
cohort3_names = load("../../OneDrive/Documents/mouse_models_hcc/human_transplantation_datasets/cohort3.RData")
ls(cohort3_names)
cohort3_names
test_data_samples2
gene_cols_heatmap()
gene_cols_heatmap
traitData
traitData %>% dim()
module_names = c("black","greenyellow","magenta","purple")
module_nomen = c("N3","N10","N7","N5") %>% setNames(module_names)
qq = vector("list",length(module_names) ) %>% setNames(module_names)
cohort3_names
g1
data(aml)
fit <- survfit(Surv(time, status) ~ x, data=aml)
library()
library(survival)
data(aml)
fit <- survfit(Surv(time, status) ~ x, data=aml)
traitData
saveRDS(traitData, "data/hcc_patient_trait.rds")
cohort3_names
clinical_data
saveRDS(g1, "data/hcc_patient_gene_expression.rds")
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
knitr::spin("chinese_hcc_cohort.R", knit = F)
getwd()
cohort3_names = load("../../OneDrive/Documents/mouse_models_hcc/human_transplantation_datasets/cohort3.RData")
g1
saveRDS(g1, "data/chinese_hcc_patient_gene_expression.rds", compress = "xz")
knitr::spin("chinese_hcc_cohort.R", knit = F)
